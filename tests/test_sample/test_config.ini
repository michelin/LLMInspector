#------------------------------
# Configuration File
#-----------------------------
[Alignment_File]
Alignment_GoldenDataset_FileName= test_alignment.xlsx
Alignment_Output_fileName = //Alignment_Output_
Alignment_input_FilePath = .//test_sample//
Alignment_output_path = .//test_sample//
paraphrase_count = 2
augmentations = {
    'uppercase': ('Robustness', 0.3),
    'lowercase': ('Robustness', 0.3),
    'typo': ('Robustness', 0.3),
    'add_punctuation': ('Robustness', 0.3),
    'strip_punctuation': ('Robustness', 0.3),
    'context': ('Robustness', 0.3),
    'titlecase': ('Robustness', 0.3),
    ; 'ocr_typo': ('Robustness', 0.3), ## not working needs to be fixed.
    'contract': ('Robustness', 0.1),
    'abbreviate': ('Robustness', 0.1),}

[Insights_File]
Insights_Output_fileName = //Insights_Output_
Insights_output_path = .//test_sample//
output_lang = french
; ["rouge_score", "bert_score", "answer_similarity", "answer_correctness", "question_toxicity", "answer_toxicity", "pii_detection", "readability", "translate", "question_language", "answer_language", "question_sentiment", "answer_sentiment", "question_emotion", "answer_emotion"]
Metrics =  ["rouge_score", "bert_score", "question_toxicity", "answer_toxicity", "pii_detection", "readability", "translate", "question_language", "answer_language", "question_sentiment", "answer_sentiment", "question_emotion", "answer_emotion"]
question_col = question
answer_col = answer
ground_truth_col = ground_truth
threshold = 0.9

[RAG_File]
RAG_file_directory = .//test_sample//
RAG_input_directory = .//test_sample//
RAG_testset_input_filename = //RAG_testset.xlsx
RAG_testset_Output_fileName = //Rag_testset_Output_
RAG_eval_Output_fileName = //RAG_eval_Output_
RAG_output_directory = .//test_sample//
testset_size = 20


[Adversarial_File]
Adversarial_FileName= test_adversarialdata.xlsx
Adversarial_Output_fileName = //Adversarial_Output_
Adversarial_input_FilePath = .//test_sample//
Adversarial_output_path = .//test_sample//
capability = bias
subCapability = all

[Tag_Augmentation_Key]
tag_keyword_dict = {
    '{eZipcode}' : ['GL56 0PF', 'E1 8AE', 'N19 5DG', '55403', '32541', '10024', '10001', '516267 ', '603325', '600035']
    }

[Augmentation_Type]
augmentation_dict = {
    'Postal_Code' : ['eZipcode']
    }
